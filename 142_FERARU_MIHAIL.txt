PRINT_INT_SYSCALL = 1
PRINT_STR_SYSCALL = 4
READ_INT_SYSCALL  = 5
READ_STR_SYSCALL  = 8
EXIT_SYSCALL      = 10 

.data
    vector: .space 256
    N: .word 0
    spatiu: .asciiz " "

.text
main:
sw $ra, ($sp)
subu $sp, $sp, 4
    li $v0, READ_INT_SYSCALL
    syscall
    la $t1, N
    sw $v0, ($t1)

    lw $t1, ($t1)
    li $t2, 0
    la $t3, vector
loop_citire:
    bge $t2, $t1, iesire_citire
    
    li $v0, READ_INT_SYSCALL
    syscall
    sw $v0, ($t3)

    addiu $t2, $t2, 1
    addiu $t3, $t3, 4
    j loop_citire

iesire_citire:

    la $t1, vector
    la $t2, N
    lw $t2, ($t2)
    subu $sp, $sp, 8
    sw $t1, 0($sp)
    sw $t2, 4($sp)
    subu $sp, $sp, 4
    jal modifica
    addiu $sp, $sp, 8

    la $t1, N
    lw $t1, ($t1)
    li $t2, 0
    la $t3, vector
loop_scriere:
    bge $t2, $t1, iesire_scriere

    lw $t4, ($t3)
    move $a0, $t4
    li $v0, PRINT_INT_SYSCALL
    syscall

    la $t4, spatiu
    move $a0, $t4
    li $v0, PRINT_STR_SYSCALL
    syscall

    addiu $t2, $t2, 1
    addiu $t3, $t3, 4
    j loop_scriere

iesire_scriere:

    li $v0, EXIT_SYSCALL
    syscall

modifica:
sw $ra, ($sp)
subu $sp, $sp, 4
    sw $s0, -0($sp)
    sw $s1, -4($sp)
    subu $sp, $sp, 8
    sw $fp, ($sp)
    subu $sp, $sp, 4
    move $fp, $sp
    subu $sp, $sp, 0



    lw $t1, 24($fp)
    beq $t1, 1, rezolva
 
    # $t1 = n / 2
    lw $t1, 24($fp)
    li $t2, 2
    div $t1, $t2
    mflo $t1
   
    # modifica(v, n / 2)
    lw $t2, 20($fp)
    subu $sp, $sp, 8
    sw $t2, 0($sp)
    sw $t1, 4($sp)
    subu $sp, $sp, 4
    jal modifica
    addiu $sp, $sp, 8

    # $t1 = n / 2
    lw $t1, 24($fp)
    li $t2, 2
    div $t1, $t2
    mflo $t1

    # $t2 = n - n / 2
    lw $t2, 24($fp)
    subu $t2, $t2, $t1

    # $t3 = v + n / 2
    lw $t3, 20($fp)
    addu $t3, $t3, $t1

    # modifica(v + n / 2, n - n / 2)
    subu $sp, $sp, 8
    sw $t3, 0($sp)
    sw $t2, 4($sp)
    subu $sp, $sp, 4
    jal modifica
    addiu $sp, $sp, 8

    j modifica_iesire

rezolva:
    lw $t1, 20($fp)
    lw $t1, ($t1)

    subu $sp, $sp, 4
    sw $t1, 0($sp)
    subu $sp, $sp, 4
    jal suma_patrate
    addiu $sp, $sp, 4
    lw $t1, 20($fp)
    sw $v0, ($t1)

modifica_iesire:


    addiu $sp, $sp, 4
    lw $fp, 0($sp)
    addiu $sp, $sp, 4
    lw $s0, 4($sp)
    lw $s1, 0($sp)
    addiu $sp, $sp, 8
    lw $ra, 0($sp)
    addiu $sp, $sp, 4
    jr $ra

suma_patrate:
sw $ra, ($sp)
subu $sp, $sp, 4
    sw $s0, -0($sp)
    subu $sp, $sp, 4
    sw $fp, ($sp)
    subu $sp, $sp, 4
    move $fp, $sp
    subu $sp, $sp, 0


    lw $t1, 16($fp)
    subu $t1, $t1, 1
    subu $sp, $sp, 4
    sw $t1, 0($sp)
    subu $sp, $sp, 4
    jal calculeaza_suma_patrate
    addiu $sp, $sp, 4

    move $v0, $v0

    addiu $sp, $sp, 4
    lw $fp, 0($sp)
    addiu $sp, $sp, 4
    lw $s0, 0($sp)
    addiu $sp, $sp, 4
    lw $ra, 0($sp)
    addiu $sp, $sp, 4
    jr $ra

calculeaza_suma_patrate:
sw $ra, ($sp)
subu $sp, $sp, 4
    sw $s0, -0($sp)
    subu $sp, $sp, 4
    sw $fp, ($sp)
    subu $sp, $sp, 4
    move $fp, $sp
    subu $sp, $sp, 0


    lw $t1, 16($fp)
    beq $t1, 1, returneaza_1

    mult $t1, $t1
    mflo $s0

    subu $t2, $t1, 1
    subu $sp, $sp, 4
    sw $t2, 0($sp)
    subu $sp, $sp, 4
    jal calculeaza_suma_patrate
    addiu $sp, $sp, 4

    addu $t1, $s0, $v0
    j calculeaza_suma_patrate_iesire

returneaza_1:
    li $t1, 1
    j calculeaza_suma_patrate_iesire

calculeaza_suma_patrate_iesire:

    move $v0, $t1

    addiu $sp, $sp, 4
    lw $fp, 0($sp)
    addiu $sp, $sp, 4
    lw $s0, 0($sp)
    addiu $sp, $sp, 4
    lw $ra, 0($sp)
    addiu $sp, $sp, 4
    jr $ra
